initSidebarItems({"trait":[["ObjectScopeSerializer","Provides functionality to create custom JSON presenters for your structs.   ## Example    ```rust use jsonway::{self, ObjectScopeSerializer};   struct User {     id: u64,     is_admin: bool }   struct Jedi {     name: String,     secret: String }   struct JediSerializer;   impl jsonway::ObjectScopeSerializer<Jedi, User> for JediSerializer {     fn root(&self) -> Option<&str> { Some(\"jedi\") }     fn build(&self, jedi: &Jedi, current_user: &User, json: &mut jsonway::ObjectBuilder) {         json.set(\"name\", jedi.name.to_string());           if current_user.is_admin {             json.set(\"secret\", jedi.secret.to_string());         }     } }   let jedi = Jedi {      name: \"Palpatine\".to_string(),      secret: \"Dark side\".to_string()  };"],["ObjectSerializer","Provides functionality to create custom JSON presenters for your structs.   ## Example    ``` use jsonway::{self, ObjectSerializer};"],["Serializer","Provides functionality to create custom JSON presenters for your structs.   ## Example    ``` use jsonway::{self, Serializer};"]]});